{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xba10ac14f41C78462966F0463dEeA190697Dd446",
      "txHash": "0xf952ad36616ef4038be7d02138426da1e69bf30cce0be94025d8c834cc629db7",
      "kind": "transparent"
    },
    {
      "address": "0x4Dd4991dffd8c45b5702Ce015B7Eaf80c31e96f3",
      "txHash": "0x1ef5672f86dbde17f1f2ed98b5a5c0c7b48c9d32ec8b319ea9c535c6ccf1c5ff",
      "kind": "transparent"
    },
    {
      "address": "0x45fEB9E330b4013F4bdd45983A6252B02296BeD3",
      "txHash": "0xfab1652714b1b266d268b9c1209bc8f4e82cbf49976070d945f04d4e54f68c87",
      "kind": "transparent"
    },
    {
      "address": "0x05AE2F73C2010Fe19b93862f6414A9b642EB066D",
      "txHash": "0x596f9119ab098f970c96b797dca76d77090eb7392b7c616a9ee4a1392fb946fa",
      "kind": "transparent"
    },
    {
      "address": "0x512f31d56aa0fbf69E2774628414FaB48a721B37",
      "txHash": "0xf24577299c906ce8f47127f5ea6468765d2bcbe613a21cc714ac842015e6dac7",
      "kind": "transparent"
    },
    {
      "address": "0x10913586fCDD84c9CE4091FC85365653D65a8d94",
      "txHash": "0x72d707b337d007886d328e4c228ec27d70db07e6db2939220a28dfd7d4c5a21b",
      "kind": "transparent"
    },
    {
      "address": "0xa9A37e4D70Fc6af8A0CC16995B9363f10dCE132E",
      "txHash": "0xec8a058593dccdb8dbbac3444cb003142d958e1c14cf22b79e5197e9823131ae",
      "kind": "transparent"
    }
  ],
  "impls": {
    "af128a020a69707a81850d13205d331f65b820c184a001f9c971e67f575aa1aa": {
      "address": "0x43C4C017A1F5E8f6340f51fd08b92175a835beA7",
      "txHash": "0x6b866cfc941149eb6e6ad26306a95b3c95f5e8a6a09bdd6fe4420ab9184cbf85",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)144_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7ececae140af01f5546603e03a09345b1881e12a591f4971061da27b1c37eccd": {
      "address": "0x3e721153506A7072C717f417c6Ade949F0f28d27",
      "txHash": "0x89122d048e75eea1cbd98158d542f7baae150ac997f0cfa9dfbbe8d72fcd9aec",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "groups",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Group)5226_storage)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:60"
          },
          {
            "label": "dappSettingSnapshot",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(DappSettingSnapshot)5204_storage)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:61"
          },
          {
            "label": "originalGroupBondValues",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:62"
          },
          {
            "label": "originalSumGroupBondValues",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:63"
          },
          {
            "label": "joinTimestamps",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:64"
          },
          {
            "label": "groupTimeBonusesKeys",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:66"
          },
          {
            "label": "groupTimeBonuses",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:67"
          },
          {
            "label": "dappAddress",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)264_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_enum(GroupType)5194": {
            "label": "enum GroupMembership.GroupType",
            "members": [
              "ANNOUNCEMENT",
              "SOCIAL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(DappSettingSnapshot)5204_storage)": {
            "label": "mapping(uint256 => struct GroupMembership.DappSettingSnapshot)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Group)5226_storage)": {
            "label": "mapping(uint256 => struct GroupMembership.Group)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(DappSettingSnapshot)5204_storage": {
            "label": "struct GroupMembership.DappSettingSnapshot",
            "members": [
              {
                "label": "protocolFeePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "subjectFeePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Group)5226_storage": {
            "label": "struct GroupMembership.Group",
            "members": [
              {
                "label": "supply",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "index",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "locked",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "groupType",
                "type": "t_enum(GroupType)5194",
                "offset": 9,
                "slot": "0"
              },
              {
                "label": "sumGroupBondValues",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sumGroupTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minimumJoinAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "groupFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "originalBondValueMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2177f826ed1100adfc7fff082569b490731f5aaa86151d1043f3ce017a0dce07": {
      "address": "0x90959d49FB696c203e61FA4f35A8fdF9CBACDdd0",
      "txHash": "0x71a421e4b71dca58e197b7024c9f9c939b92944a7c7713d45ccc83c20536d683",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "protocolFeePercent",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:12"
          },
          {
            "label": "subjectFeePercent",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:13"
          },
          {
            "label": "groupIndex",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:15"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:17"
          },
          {
            "label": "suprToken",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IERC20)2498",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:19"
          },
          {
            "label": "mapDeposits",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:20"
          },
          {
            "label": "groupMembership",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(GroupMembership)6195",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:21"
          },
          {
            "label": "groupMembershipAddress",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(GroupMembership)6195": {
            "label": "contract GroupMembership",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2498": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4e6a8fc488e060c6a6d0b01ab4df148ecb04072b2fea51af0f97508ccdfc6da0": {
      "address": "0x44F3f65F31b9EDDC62A0dfA91E67730b20461595",
      "txHash": "0x448aeb0200b8493eb9e48748fc7b87200530fd6d0328fb19aaf52e528a006ea9",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "groups",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Group)6409_storage)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:64"
          },
          {
            "label": "dappSettingSnapshot",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(DappSettingSnapshot)6387_storage)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:65"
          },
          {
            "label": "originalGroupBondValues",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:66"
          },
          {
            "label": "originalSumGroupBondValues",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:67"
          },
          {
            "label": "joinTimestamps",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:68"
          },
          {
            "label": "groupTimeBonusesKeys",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:70"
          },
          {
            "label": "groupTimeBonuses",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:71"
          },
          {
            "label": "dappAddress",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "GroupMembership",
            "src": "contracts/Dev/GroupMembership.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)394_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_enum(GroupType)6377": {
            "label": "enum GroupMembership.GroupType",
            "members": [
              "ANNOUNCEMENT",
              "SOCIAL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(DappSettingSnapshot)6387_storage)": {
            "label": "mapping(uint256 => struct GroupMembership.DappSettingSnapshot)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Group)6409_storage)": {
            "label": "mapping(uint256 => struct GroupMembership.Group)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(DappSettingSnapshot)6387_storage": {
            "label": "struct GroupMembership.DappSettingSnapshot",
            "members": [
              {
                "label": "protocolFeePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "subjectFeePercent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Group)6409_storage": {
            "label": "struct GroupMembership.Group",
            "members": [
              {
                "label": "supply",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "index",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "locked",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "groupType",
                "type": "t_enum(GroupType)6377",
                "offset": 9,
                "slot": "0"
              },
              {
                "label": "sumGroupBondValues",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sumGroupTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minimumJoinAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "groupFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "originalBondValueMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "8090b1a40cbb07ab652a3a5ebc8eb52c4b7adb40000a4e6ff6f6506dc80e18fd": {
      "address": "0x627D34f2b80811f2beDAB2FFC9D70AA8d2aB86F0",
      "txHash": "0x5f3c7f26657496678840aff80307cf41d50ce31a398926e6288cf6daea663ac4",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "protocolFeePercent",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:20"
          },
          {
            "label": "subjectFeePercent",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:21"
          },
          {
            "label": "groupIndex",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:23"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:25"
          },
          {
            "label": "suprToken",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IERC20)3290",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:27"
          },
          {
            "label": "mapDeposits",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:28"
          },
          {
            "label": "groupMembership",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(GroupMembership)7439",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:29"
          },
          {
            "label": "groupMembershipAddress",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:30"
          },
          {
            "label": "totalBuyAmount",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:31"
          },
          {
            "label": "totalSellAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:32"
          },
          {
            "label": "tokenInitialPrices",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SuperDapp",
            "src": "contracts/Dev/SuperDapp.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)765_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(GroupMembership)7439": {
            "label": "contract GroupMembership",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)3290": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
